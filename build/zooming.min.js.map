{"version":3,"file":"zooming.min.js","sources":["../src/utils.js","../src/modules/event-handler.js","../src/modules/target.js","../src/modules/zooming.js","../src/options.js","../src/modules/overlay.js","../src/modules/wrapper.js","../src/index.js"],"sourcesContent":["export const webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nexport const cursor = {\n  default: 'auto',\n  zoomIn: `${webkitPrefix}zoom-in`,\n  zoomOut: `${webkitPrefix}zoom-out`,\n  grab: `${webkitPrefix}grab`,\n  move: 'move'\n}\n\nexport function loadImage(src, cb) {\n  if (!src) return\n\n  const img = new Image()\n  img.onload = function() {\n    if (cb) cb(img)\n  }\n\n  img.src = src\n}\n\nexport function getOriginalSource(el) {\n  if (el.hasAttribute('data-original')) {\n    return el.getAttribute('data-original')\n  } else if (el.parentNode.tagName === 'A') {\n    return el.parentNode.getAttribute('href')\n  }\n\n  return null\n}\n\nexport function setStyle(el, styles, remember) {\n  checkTrans(styles)\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nconst stylesToCopy = [\n  'position',\n  'display',\n  'float',\n  'top',\n  'left',\n  'right',\n  'bottom',\n  'marginBottom',\n  'marginLeft',\n  'marginRight',\n  'marginTop',\n  'verticalAlign'\n]\n\nexport function copy(el) {\n  const box = el.getBoundingClientRect()\n  const styles = getComputedStyle(el)\n  const ph = document.createElement('div')\n  let i = stylesToCopy.length, key\n\n  while (i--) {\n    key = stylesToCopy[i]\n    ph.style[key] = styles[key]\n  }\n\n  setStyle(ph, {\n    visibility: 'hidden',\n    width: box.width + 'px',\n    height: box.height + 'px',\n    display: styles.display === 'inline' ? 'inline-block' : styles.display\n  })\n\n  return ph\n}\n\nexport function bindAll(_this, that) {\n  const methods = Object.getOwnPropertyNames(Object.getPrototypeOf(_this))\n\n  methods.forEach(method => {\n    _this[method] = _this[method].bind(that)\n  })\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nexport const transformCssProp = trans.transformCssProp\nexport const transEndEvent = trans.transEndEvent\n\nfunction checkTrans(styles) {\n  const transitionProp = trans.transitionProp\n  const transformProp = trans.transformProp\n\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n}\n\nfunction sniffTransition(el) {\n  let ret = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end = {\n    transition: 'transitionend',\n    mozTransition: 'transitionend',\n    webkitTransition: 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n","import { bindAll } from '../utils'\n\nconst PRESS_DELAY = 200\nconst MULTITOUCH_SCALE_FACTOR = 2\n\nexport default {\n  init(instance) {\n    bindAll(this, instance)\n  },\n\n  click(e) {\n    e.preventDefault()\n\n    if (isPressingMetaKey(e)) {\n      return window.open(\n        this.target.srcOriginal || e.currentTarget.src,\n        '_blank'\n      )\n    }\n\n    if (this.shown) {\n      if (this.released) this.close()\n      else this.release()\n    } else {\n      this.open(e.currentTarget)\n    }\n  },\n\n  scroll() {\n    const scrollTop =\n      window.pageYOffset ||\n      (document.documentElement || document.body.parentNode || document.body)\n        .scrollTop\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = scrollTop\n    }\n\n    const deltaY = this.lastScrollPosition - scrollTop\n\n    if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  },\n\n  keydown(e) {\n    if (isEscape(e)) {\n      if (this.released) this.close()\n      else this.release(() => this.close())\n    }\n  },\n\n  mousedown(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(e.clientX, e.clientY)\n    }, PRESS_DELAY)\n  },\n\n  mousemove(e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  },\n\n  mouseup(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  },\n\n  touchstart(e) {\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      processTouches(e.touches, this.options.scaleExtra, (x, y, scaleExtra) => {\n        this.grab(x, y, scaleExtra)\n      })\n    }, PRESS_DELAY)\n  },\n\n  touchmove(e) {\n    if (this.released) return\n\n    processTouches(e.touches, this.options.scaleExtra, (x, y, scaleExtra) => {\n      this.move(x, y, scaleExtra)\n    })\n  },\n\n  touchend(e) {\n    if (isTouching(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n}\n\nfunction isLeftButton(event) {\n  return event.button === 0\n}\n\nfunction isPressingMetaKey(event) {\n  return event.metaKey || event.ctrlKey\n}\n\nfunction isEscape(event) {\n  const code = event.key || event.code\n  return code === 'Escape' || event.keyCode === 27\n}\n\nfunction isTouching(event) {\n  return event.targetTouches.length > 0\n}\n\nfunction processTouches(touches, currScaleExtra, cb) {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = distX / window.innerWidth * MULTITOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = distY / window.innerHeight * MULTITOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n","import { cursor, setStyle, getOriginalSource, transformCssProp } from '../utils'\n\nexport default {\n  init(el, instance) {\n    this.el = el\n    this.instance = instance\n    this.wrapper = document.createElement('div')\n    this.srcThumbnail = this.el.getAttribute('src')\n    this.srcOriginal = getOriginalSource(this.el)\n    this.rect = el.getBoundingClientRect()\n    this.translate = calculateTranslate(this.rect)\n    this.styleClose = setStyle(\n      this.el,\n      {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: '',\n        bottom: '',\n        whiteSpace: 'nowrap',\n        marginTop: -this.rect.height / 2 + 'px',\n        marginLeft: -this.rect.width / 2 + 'px',\n        cursor: instance.options.enableGrab ? cursor.grab : cursor.zoomOut,\n        transform: `translate(${this.translate.x}px, ${this.translate.y}px)`,\n        transition: '',\n        width: `${this.rect.width}px`,\n        height: `${this.rect.height}px`\n      },\n      true\n    )\n  },\n\n  zoomIn() {\n    const options = this.instance.options\n\n    this.scale = calculateScale(\n      this.rect,\n      options.scaleBase,\n      options.customSize\n    )\n\n    // force layout update\n    this.el.offsetWidth\n\n    this.styleOpen = {\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `scale(${this.scale.x},${this.scale.y})`\n    }\n\n    // trigger transition\n    setStyle(this.el, this.styleOpen)\n  },\n\n  zoomOut() {\n    // force layout update\n    this.el.offsetWidth\n    const rect = this.instance.placeholder.getBoundingClientRect()\n    const translate = calculateTranslate(rect)\n\n    setStyle(this.el, {\n      transform: `translate(${translate.x}px, ${translate.y}px)`\n    })\n  },\n\n  grab(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  move(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  restoreCloseStyle() {\n    setStyle(this.el, this.styleClose)\n  },\n\n  restoreOpenStyle() {\n    setStyle(this.el, this.styleOpen)\n  },\n\n  upgradeSource() {\n    if (!this.srcOriginal) return\n\n    const parentNode = this.el.parentNode\n    const temp = this.el.cloneNode(false)\n\n    // force compute the hi-res image in DOM to prevent\n    // image flickering while updating src\n    temp.setAttribute('src', this.srcOriginal)\n    temp.style.position = 'fixed'\n    temp.style.visibility = 'hidden'\n    parentNode.appendChild(temp)\n\n    setTimeout(() => {\n      this.el.setAttribute('src', this.srcOriginal)\n      parentNode.removeChild(temp)\n    }, 100)\n  },\n\n  downgradeSource() {\n    if (!this.srcOriginal) return\n\n    this.el.setAttribute('src', this.srcThumbnail)\n  }\n}\n\nfunction calculateTranslate(rect) {\n  return {\n    x: rect.left - (window.innerWidth - rect.width) / 2,\n    y: rect.top - (window.innerHeight - rect.height) / 2\n  }\n}\n\nfunction calculateScale(rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = rect.width / 2\n    const targetHalfHeight = rect.height / 2\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n\nfunction getWindowCenter() {\n  const windowWidth = Math.min(\n    document.documentElement.clientWidth,\n    window.innerWidth\n  )\n  const windowHeight = Math.min(\n    document.documentElement.clientHeight,\n    window.innerHeight\n  )\n\n  return {\n    x: windowWidth / 2,\n    y: windowHeight / 2\n  }\n}\n","import {\n  cursor,\n  loadImage,\n  copy,\n  transEndEvent,\n  getOriginalSource\n} from '../utils'\nimport DEFAULT_OPTIONS from '../options'\n\nimport EventHandler from './event-handler'\nimport Overlay from './overlay'\nimport Wrapper from './wrapper'\nimport Target from './target'\n\n/**\n * Zooming instance.\n */\nexport default class Zooming {\n  /**\n   * @param {Object} [options] Update default options if provided.\n   */\n  constructor(options) {\n    // elements\n    this.parent = null\n    this.placeholder = null\n    this.wrapper = Object.create(Wrapper)\n    this.target = Object.create(Target)\n    this.overlay = Object.create(Overlay)\n    this.eventHandler = Object.create(EventHandler)\n    this.body = document.body\n\n    // state\n    this.shown = false\n    this.lock = false\n    this.released = true\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    // init\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options)\n    this.eventHandler.init(this)\n    this.listen(this.options.defaultZoomable)\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen(el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el)\n      let i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = cursor.zoomIn\n    el.addEventListener('click', this.eventHandler.click, { passive: false })\n\n    if (this.options.preloadImage) {\n      loadImage(getOriginalSource(el))\n    }\n\n    return this\n  }\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config(options) {\n    if (!options) return this.options\n\n    Object.assign(this.options, options)\n    this.overlay.updateStyle(this.options)\n\n    return this\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open(el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string' ? document.querySelector(el) : el\n\n    if (target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(target)\n\n    this.parent = target.parentNode.tagName === 'A'\n      ? target.parentNode.parentNode\n      : target.parentNode\n\n    if (!this.options.preloadImage) {\n      loadImage(this.target.srcOriginal)\n    }\n\n    this.shown = true\n    this.lock = true\n\n    this.placeholder = copy(target)\n    this.target.init(target, this)\n    this.overlay.init(this)\n\n    this.parent.insertBefore(this.placeholder, target)\n    this.wrapper.init(this)\n    this.overlay.create()\n    this.overlay.show()\n    this.target.zoomIn()\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n\n      this.target.upgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, true)\n      }\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close(cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(target)\n\n    this.lock = true\n\n    this.body.style.cursor = cursor.default\n    this.overlay.hide()\n    this.target.zoomOut()\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      this.target.downgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, false)\n      }\n\n      this.target.restoreCloseStyle()\n      this.parent.insertBefore(target, this.placeholder)\n      this.parent.removeChild(this.placeholder)\n      this.wrapper.destroy()\n      this.overlay.destroy()\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(target)\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(target)\n\n    this.released = false\n\n    this.target.move(x, y, scaleExtra)\n    this.body.style.cursor = cursor.move\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release(cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(target)\n\n    this.lock = true\n\n    this.target.restoreOpenStyle()\n    this.body.style.cursor = cursor.default\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n}\n\nfunction toggleGrabListeners(el, handler, add) {\n  const types = [\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'touchstart',\n    'touchmove',\n    'touchend'\n  ]\n\n  types.forEach(type => {\n    if (add) {\n      el.addEventListener(type, handler[type], { passive: false })\n    } else {\n      el.removeEventListener(type, handler[type], { passive: false })\n    }\n  })\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: false,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   zIndex: 998,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nconst OPTIONS = {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: false,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * The z-index that the overlay will be added with.\n   * @type {number}\n   */\n  zIndex: 998,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n\nexport default OPTIONS\n","import { setStyle } from '../utils'\n\nexport default {\n  init(instance) {\n    this.el = document.createElement('div')\n    this.el.addEventListener('click', () => this.instance.close())\n    this.instance = instance\n\n    setStyle(this.el, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0\n    })\n\n    this.updateStyle(instance.options)\n  },\n\n  updateStyle(options) {\n    setStyle(this.el, {\n      zIndex: options.zIndex,\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  },\n\n  create() {\n    this.instance.parent.appendChild(this.el)\n  },\n\n  destroy() {\n    this.instance.parent.removeChild(this.el)\n  },\n\n  show() {\n    setTimeout(\n      () => this.el.style.opacity = this.instance.options.bgOpacity,\n      30\n    )\n  },\n\n  hide() {\n    this.el.style.opacity = 0\n  }\n}\n","import { setStyle } from '../utils'\n\nexport default {\n  init(instance) {\n    this.el = document.createElement('div')\n    this.instance = instance\n    this.instance.parent.appendChild(this.el)\n    this.el.appendChild(this.instance.target.el)\n\n    setStyle(this.el, {\n      position: 'fixed',\n      zIndex: instance.options.zIndex + 1,\n      top: '50%',\n      left: '50%',\n      width: 0,\n      height: 0\n    })\n  },\n\n  destroy() {\n    this.instance.parent.appendChild(this.instance.target.el)\n    this.instance.parent.removeChild(this.el)\n  }\n}\n","import Zooming from './modules/zooming'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming()\n})\n\nexport default Zooming\n"],"names":["loadImage","src","cb","img","Image","onload","getOriginalSource","el","hasAttribute","getAttribute","parentNode","tagName","setStyle","styles","remember","s","style","original","key","copy","box","getBoundingClientRect","getComputedStyle","ph","document","createElement","i","stylesToCopy","length","width","height","display","bindAll","_this","that","Object","getOwnPropertyNames","getPrototypeOf","forEach","method","bind","checkTrans","transitionProp","trans","transformProp","value","transition","transform","sniffTransition","ret","tform","end","some","undefined","prop","transEndEvent","transformCssProp","replace","isLeftButton","event","button","isPressingMetaKey","metaKey","ctrlKey","isEscape","code","keyCode","isTouching","targetTouches","processTouches","touches","currScaleExtra","total","firstTouch","multitouch","scaleExtra","xs","ys","min","x","clientX","y","clientY","max","t","distX","distY","window","innerWidth","innerHeight","calculateTranslate","rect","left","top","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","windowCenter","getWindowCenter","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","documentElement","clientWidth","clientHeight","toggleGrabListeners","handler","add","addEventListener","type","passive","removeEventListener","webkitPrefix","cursor","OPTIONS","instance","this","e","preventDefault","open","target","srcOriginal","currentTarget","shown","released","close","release","scrollTop","pageYOffset","body","lastScrollPosition","deltaY","abs","options","scrollThreshold","pressTimer","setTimeout","grab","move","_this3","updateStyle","zIndex","bgColor","transitionDuration","transitionTimingFunction","parent","appendChild","removeChild","_this2","opacity","bgOpacity","wrapper","srcThumbnail","translate","styleClose","enableGrab","zoomOut","offsetWidth","styleOpen","placeholder","dx","dy","temp","cloneNode","setAttribute","position","visibility","Zooming","create","Wrapper","Target","overlay","Overlay","eventHandler","EventHandler","lock","babelHelpers.extends","DEFAULT_OPTIONS","init","listen","defaultZoomable","els","querySelectorAll","zoomIn","click","preloadImage","onOpen","querySelector","onBeforeOpen","insertBefore","show","scroll","keydown","onEnd","upgradeSource","onClose","onBeforeClose","default","hide","downgradeSource","restoreCloseStyle","destroy","onBeforeGrab","onBeforeMove","onRelease","onBeforeRelease","restoreOpenStyle"],"mappings":"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"}